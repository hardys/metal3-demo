---
- name: "Ensure {{working_dir}} exists"
  file:
    path: "{{ working_dir }}"
    state: directory

# see https://www.suse.com/c/capi-fleet-and-gitops-a-new-way-for-orchestrating-kubernetes-clusters-with-rancher/
- name: Copy manifest to disable embedded CAPI
  copy:
    src: disable_embedded_capi.yaml
    dest: "{{ working_dir }}"

- name: Apply manifest to disable embedded CAPI
  command:
    cmd: kubectl apply -f "{{ working_dir }}/disable_embedded_capi.yaml"

- name: Disable embedded CAPI mutating-webhook
  command:
    cmd: kubectl delete mutatingwebhookconfiguration.admissionregistration.k8s.io mutating-webhook-configuration

- name: Disable embedded CAPI validating-webhook
  command:
    cmd: kubectl delete validatingwebhookconfigurations.admissionregistration.k8s.io validating-webhook-configuration

- name: Wait for embedded CAPI to be deleted
  command:
    cmd: kubectl wait --for=delete namespace/cattle-provisioning-capi-system --timeout=300s

# see https://cluster-api.sigs.k8s.io/user/quick-start.html#install-clusterctl
- name: Install clusterctl
  become: yes
  get_url:
    url: "https://github.com/kubernetes-sigs/cluster-api/releases/download/{{ capi_core_version }}/clusterctl-linux-amd64"
    dest: /usr/local/bin/clusterctl
    mode: 0755
    owner: root
    group: root

# see https://github.com/rancher-sandbox/cluster-api-provider-rke2#setting-up-clusterctl
- name: Ensure  ~/.cluster-api directory exists
  file:
    path:  ~/.cluster-api
    state: directory

- name: Setup clusterctl.yaml
  template:
    src: clusterctl.yaml.j2
    dest: ~/.cluster-api/clusterctl.yaml

- name: Install CAPI core and metal3 infrastructure
  shell: |
    {% if github_token is defined %}
    export GITHUB_TOKEN={{ github_token }}
    {% endif %}
    clusterctl init --core "cluster-api:{{ capi_core_version }}" --infrastructure "metal3:{{ capi_metal3_version }}" --bootstrap "rke2:{{ capi_rke2_version }}" --control-plane "rke2:{{ capi_rke2_version }}"

- name: Wait for CAPI to successfully rolled out
  shell: >
    kubectl rollout status Deployment/{{ item.deployment }} -n {{ item.namespace }} 2>&1 | grep 'successfully rolled out'
  register: rollout_result
  until: rollout_result.rc == 0
  retries: 12
  delay: 10
  with_items:
    - {'deployment': 'capi-controller-manager', 'namespace': 'capi-system'}
    - {'deployment': 'capm3-controller-manager', 'namespace': 'capm3-system'}
    - {'deployment': 'rke2-bootstrap-controller-manager', 'namespace': 'rke2-bootstrap-system'}
    - {'deployment': 'rke2-control-plane-controller-manager', 'namespace': 'rke2-control-plane-system'}
