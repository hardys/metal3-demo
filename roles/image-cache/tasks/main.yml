---
- name: Create image-cache directory
  become: true
  file:
    path: "{{ images_dir }}"
    state: directory

- name: Check if local path exists and copy to the image-cache directory
  vars:
    os_local_image: "{{ lookup('env', 'OS_LOCAL_IMAGE') }}"
  block:
  - name: Check if the image exists into the local path
    when: os_local_image
    stat:
      path: "{{ os_local_image }}"

  - name: Create the EIB image to build the image-cache
    when: os_local_image
    import_role:
      name: edge-image-builder

- name: Check if OS image exists
  stat:
    path: "{{ images_dir }}/{{ image_name }}"
  register: image_path

- name: Download and modify OS image if it doesn't exist
  when: "not image_path.stat.exists"
  become: true
  block:
  - name: Download OS image
    get_url:
      url: "{{ image_url }}"
      dest: "{{ images_dir }}/{{ image_name }}"
#      checksum: "{{ image_checksum }}"

  - name: Generate OS image checksum
    command:
      cmd: sha256sum "{{ image_name }}"
      chdir: "{{ images_dir }}"
    register: image_checksum

  - name: Write OS image checksum file
    copy:
      content: "{{ image_checksum.stdout }}"
      dest: "{{ images_dir }}/{{ image_name }}.sha256"

  - ansible.builtin.debug:
      msg: "Downloaded {{ images_dir }}/{{ image_name }}"

- name: Check if modified OS image exists
  stat:
    path: "{{ images_dir }}/{{ metal3_image_name }}"
  register: metal3_image_path

- name: Modify OS image if it doesn't exist
  when: "not metal3_image_path.stat.exists"
  become: true
  block:
  - name: Copy file OS image file
    ansible.builtin.copy:
      src: "{{ images_dir }}/{{ image_name }}"
      dest: "{{ images_dir }}/{{ metal3_image_name }}"

  # Use "opensuse:root" credentials for the dev user.
  # Generate another password by running "openssl passwd -6 -salt SalTsaLt PASSWORD"
  # and replacing the "passwd" entry below (keep in mind some characters must be escaped e.g. "/", "$").
  - name: Modify cloud.cfg datasource
    command:
      cmd: |
        virt-edit -a "{{ metal3_image_name }}" /etc/cloud/cloud.cfg -e 's/datasource_list.*/datasource_list: [ ConfigDrive, OpenStack, None ]/'
      chdir: "{{ images_dir }}"

  - name: Modify cloud.cfg lock_passwd
    command:
      cmd: |
        virt-edit -a "{{ metal3_image_name }}" /etc/cloud/cloud.cfg -e 's/(\s*)lock_passwd.*/\1lock_passwd: False/'
      chdir: "{{ images_dir }}"

  - name: Modify cloud.cfg user
    command:
      cmd: |
        virt-edit -a "{{ metal3_image_name }}" /etc/cloud/cloud.cfg -e 's/(\s*)(name: opensuse)/\1\2\n\1passwd: \$6\$SalTsaLt\$4U6ktRhvpSUKdG2XHWmsxlvykFSJRnMyOLYPcWLoCuj3oHB4NaE9Is0wXf4guihZvmSBTairoUvh6s5.JoJED\//'
      chdir: "{{ images_dir }}"

  - name: Generate checksum for modified image
    command:
      cmd: sha256sum "{{ metal3_image_name }}"
      chdir: "{{ images_dir }}"
    register: metal3_image_checksum

  - name: Write modified OS image checksum file
    copy:
      content: "{{ metal3_image_checksum.stdout }}"
      dest: "{{ images_dir }}/{{ metal3_image_name }}.sha256"

  - ansible.builtin.debug:
      msg: "Modified {{ images_dir }}/{{ metal3_image_name }}"

- name: Run image-cache webserver container
  become: true
  containers.podman.podman_container:
    name: image-cache
    image: docker.io/library/httpd:2.4
    volumes:
      - "{{ images_dir }}:/usr/local/apache2/htdocs"
    detach: true
    exposed_ports:
      - 80
    ports:
      - 8080:80
    state: started
    force_restart: true
